uses crt;
var  i, n: longint;
     divider: integer;
     bin, bs, k: integer;
     bin_s: string;
     check, s: LongInt;
begin
clrscr;
k:=0;
bin:=1;
while k<5 do
 begin
  bin_s := '';
  for bs := 1 to bin do bin_s := '1' + bin_s + '0';
  bin_s := '1' + bin_s;
  check := 0;
  for i := 1 to length(bin_s) do check:= check * 2 + (ord(bin_s[i]) - ord('0'));
  s := 1;
  for divider := 2 to trunc(sqrt(check))do
   begin
    if check mod divider = 0 then
     s := s + divider + (check div divider);
   end;
  if check = s then
   begin
    k:=k+1;
    writeLn(check);
    bin:=bin+1
   end
  else bin:=bin+1;
 end;
 readln
end.

Возможно. Не надо перебирать тысячи чисел, которые заведомо не могут быть совершенными. У совершенных чисел есть одна 
особенность: в двоичной записи их сначала идут N единиц, а потом - N-1 нулей. Пример: 6 - совершенное число - переводим 
в двоичную запись = 110 -> 2 единицы и 1 ноль. Следующее совершенное число = 28 = 11100 - опять совпадает: 3 единицы и 2 
нуля.

А теперь "переворачиваем" алгоритм: сначала составляем строку, содержащую N единиц и (N-1) нулей, переводим ее в 10-ное 
число, и проверяем, является ли это число совершенным.